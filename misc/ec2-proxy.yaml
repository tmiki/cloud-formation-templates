---
Description: |
  You can create a stack in AWS CLI as below.
  $ aws cloudformation deploy --template-file ec2-proxy.yaml --stack-name ec2-proxy --parameter-overrides KeyPairName=${your key pair name} MyIpAddress=${You global IP address}/32


Parameters:
  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Please specify your EC2 key pair name.
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  MyIpAddress:
    Type: String
    Description: 'Please put your global IP address communicates with the EC2 instance.'

Resources:
  EC2ProxyServer:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: us-west-2a
      ImageId: !Ref LatestAmiId
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      SecurityGroups:
        - !Ref EC2ProxyServerSG
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            # Get the latest CloudFormation package
            yum update -y aws-cfn-bootstrap
            # Start cfn-init
            /opt/aws/bin/cfn-init -s ${AWS::StackId} -r EC2ProxyServer --region ${AWS::Region} || error_exit 'Failed to run cfn-init'
    Metadata:
      Comment: Install Apache httpd
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              httpd: []
          files:
            "/etc/httpd/conf.d/http-proxy.conf":
              content: |
                <IfModule proxy_module>
                  ProxyRequests On
                  ProxyVia On

                  Listen 8080
                  <Proxy *>
                  Order deny,allow
                  Allow from all
                  </Proxy>
                </IfModule>
              mode: '000644'
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'

  EC2ProxyServerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow all TCP traffic
      SecurityGroupIngress:
      - CidrIp: !Ref MyIpAddress
        IpProtocol: tcp
        FromPort: 1
        ToPort: 65535

Outputs:
  EC2PublicIp:
    Description: The Public IP of this EC2 instance.
    Value: !GetAtt EC2ProxyServer.PublicIp
    Export:
      Name: EC2PublicIp

